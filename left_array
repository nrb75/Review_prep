#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Oct 19 09:31:58 2018

@author: natalie
"""

#Given an array, a and d left rotations, return the array

#example
# a = [1 2 3 4 5]
#after 2 d left roations, where each integer is shifted left, the array is:
#a_left=[3 4 5 1 2]

#test scenario
#input first line is length of array, and d times we want to left rotate it
#2nd line is the array

# 4 2
# 1 2 3 4

user_input="""4 2
1 2 3 4"""

input_split=user_input.split()

n=int(input_split[0])#the number of integers in the array

d=int(input_split[1])#the number of left rotations we have to do

a=input_split[2:]#array to be left modified
a = list(map(int, a)) #make it into a numeric list
newa=np.zeros(len(a))


def leftarray(user_input):
    import numpy as np
    n=int(input_split[0])#the number of integers in the array
    d=int(input_split[1])#the number of left rotations we have to do
    a=input_split[2:]#array to be left modified
    a = list(map(int, a)) #make it into a numeric list
    newa=np.zeros(len(a))
    newa=a[d:]+a[:d]
    return(newa)
    
    

  #  for i in range(len(a)):
   #    if i==(len(a)-1): #if we are at the end of the list, need to shift value to beginning
    #        newa[d-1]=a[i] #sets the spot d spaces to left of begninning
     #   if i==(len(a)-d-1): #if we are d spaces from the end of the list, this will now be the end
   #         newa[-1]=a[i]
     #   if i <= (len(a)-d): #if we are not in danger of hitting the end of the list, we can simply shift it to the left d times
       #     newa[i-1]=a[i+d-1]
        #if i==0: #if we are the start, simply move it d to the left
            
        #print(i)
    #return(newa)
    